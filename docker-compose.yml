version: '3.9'

services:
  db:
    image: postgres:15.7
    restart: always
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rest_with_spring_boot_erudio
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - frohlich-network

  rest-with-spring-boot-erudio:
    image: eduardofrohlich/rest-with-spring-boot-erudio
    restart: always
    build: ./22_ContainerizeApplicationWithDocker
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/rest_with_spring_boot_erudio
      - SPRING_DATASOURCE_USERNAME=docker
      - SPRING_DATASOURCE_PASSWORD=postgres
      - TZ=America/Sao_Paulo
      - CORS_ORIGIN_PATTERNS=http://localhost:8080,http://localhost:3000,https://erudio.com.br
      - FILE_UPLOAD_DIR=/home/eduardo/upload
      - SECURITY_JWT_TOKEN_SECRET_KEY=53cr37
      - SECURITY_JWT_TOKEN_EXPIRE_LENGTH=3600000
      - SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_OPEN_IN_VIEW=false
      - SPRING_SERVLET_MULTIPART_ENABLED=true
      - SPRING_SERVLET_MULTIPART_FILE_SIZE_THRESHOLD=2KB
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=200MB
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=215MB
      - SPRING_DOC_PATHS_TO_MATCH=/api/**/v1/**,/api/**/v2/**
      - SPRING_DOC_SWAGGER_UI_USE_ROOT_PATH=true
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - frohlich-network

networks:
  frohlich-network:
    driver: bridge

volumes:
  postgres_data:
